#======================================================================
# Configuration file for cp4ba-installations tool
#
# This configuration install and configure:
#
# Content
#======================================================================

#----------------------------------------------------------------------
# Main section
#----------------------------------------------------------------------

# description of deployment (will be set in metadata.annotations.kubernetes.io/description)
export CP4BA_INST_DESCRIPTION="Production deployment Content with GraphQL"

# name of CR (as you like)
export CP4BA_INST_CR_NAME="fncm-mo-prod"
# logical id of the environment (it will be part of installation namespace)
export CP4BA_INST_ENV="test1-fncm-mo-graphql"
# the name of target namespace, created if not exists
export CP4BA_INST_NAMESPACE="cp4ba-${CP4BA_INST_ENV}"
# do not modify (used for DB names)
export CP4BA_INST_ENV_FOR_DB_PREFIX="${CP4BA_INST_ENV//-/_}"
# deployment type, 'starter' or 'production'
export CP4BA_INST_TYPE="production"
# platform type, 'OCP' or 'ROKS'
export CP4BA_INST_PLATFORM="OCP"

# CP4BA version to install, must match with Case Package Manager appVersion tag
export CP4BA_INST_RELEASE="23.2.0"
# Used for image 'tag' of current release 
export CP4BA_INST_APPVER="23.0.2"

# namespace of LDAP and DB supporting components (do not modify for education/demo/test)
export CP4BA_INST_SUPPORT_NAMESPACE="${CP4BA_INST_NAMESPACE}"
# if LDAP/DBs already installed in different namespace (eg: cp4ba-supports-...)
# export CP4BA_INST_SUPPORT_NAMESPACE="cp4ba-supports-${CP4BA_INST_ENV}"

# storage classes (to check those available on your OCP cluster use: oc get sc)
export CP4BA_INST_SC_FILE="managed-nfs-storage"
export CP4BA_INST_SC_BLOCK="thin-csi"

# Pak administrator
export CP4BA_INST_PAKBA_ADMIN_USER="cp4admin"
export CP4BA_INST_PAKBA_ADMIN_PWD="dem0s"
export CP4BA_INST_PAKBA_ADMIN_GROUP="AdminsGroup"

# folder of CasePakManager tool scripts 
export CP4BA_INST_CMGR_TOOLS_FOLDER="../../cp4ba-casemanager-setup"

# Folder used to read configuration files (.propertis)
export CP4BA_INST_CONFIG_FOLDER="../configs"

# Output folder used to generate configuration files (.yaml, .sql)
export CP4BA_INST_OUTPUT_FOLDER="../output"

# Reference to CR template file used to generate this configuration (must be in 'CP4BA_INST_CONFIG_FOLDER' folder)
export CP4BA_INST_CR_TEMPLATE="cp4ba-cr-ref-fncm-multi-os-graphql.yaml"

#----------------------------------------------------------------------
# LDAP & IAM section
#----------------------------------------------------------------------

# LDAP optional, set CP4BA_INST_LDAP to false to use external preconfigured ldap
# if true will install a local LDAP pod along with CP4BA deployment
export CP4BA_INST_LDAP=true
# folder of LDAP tool scripts
export CP4BA_INST_LDAP_TOOLS_FOLDER="../../cp4ba-idp-ldap/scripts"
# LDAP configuration file
export CP4BA_INST_LDAP_CFG_FILE="${CP4BA_INST_CONFIG_FOLDER}/_cfg-production-ldap-domain.properties"
# do not modify following CP4BA_INST_LDAP_... vars
export CP4BA_INST_LDAP_HOST="${LDAP_HOST}"
export CP4BA_INST_LDAP_PORT="${LDAP_PORT}"
export CP4BA_INST_LDAP_SECRET="ldap-bind-${CP4BA_INST_ENV}"
export CP4BA_INST_LDAP_BASE_DOMAIN="${LDAP_FULL_DOMAIN}"
export CP4BA_INST_LDAP_ADMIN_USER="cn=admin,${CP4BA_INST_LDAP_BASE_DOMAIN}"
export CP4BA_INST_LDAP_ADMIN_PWD="passw0rd"

# IAM optional, set CP4BA_INST_IAM to false to avoid user onboarding in pak or when CP4BA_INST_LDAP=false
# if true will onboard users from LDAP
export CP4BA_INST_IAM=true
# folder of IAM tool scripts
export CP4BA_INST_IDP_TOOLS_FOLDER="../../cp4ba-idp-ldap/scripts"
# IDP configuration file
export CP4BA_INST_IDP_CFG_FILE="${CP4BA_INST_CONFIG_FOLDER}/_cfg-production-idp.properties"
# do not modify following CP4BA_INST_IAM_... vars
export CP4BA_INST_IAM_ADMIN_USER="cpadmin"
export CP4BA_INST_IAM_ADMIN_GROUP="AdminsGroup"

#----------------------------------------------------------------------
# DB section
#----------------------------------------------------------------------

# DB optional, set CP4BA_INST_DB to false to use external preconfigured db server
# if true will install a local Postgres DB pod along with CP4BA deployment
export CP4BA_INST_DB=true
export CP4BA_INST_DB_OWNER="postgres"
export CP4BA_INST_DB_NAMESPACE="${CP4BA_INST_SUPPORT_NAMESPACE}"
export CP4BA_INST_DB_SERVER_PORT="5432"
export CP4BA_INST_DB_FAMILY_PREFIX="${CP4BA_INST_ENV}"
export CP4BA_INST_DB_FAKE="fake"
export CP4BA_INST_DB_STORAGE_SIZE="30Gi"
export CP4BA_INST_DB_REQS_CPU="1000m"
export CP4BA_INST_DB_REQS_MEMORY="2048Mi"
export CP4BA_INST_DB_LIMITS_CPU="2000m"
export CP4BA_INST_DB_LIMITS_MEMORY="3096Mi"

# DB Configurations
# number of DB servers, 1 DB instance supports an instance of BAW
export CP4BA_INST_DB_INSTANCES=2

# for each db server instance (if more than 1 replicate 4 section elements using CP4BA_INST_DB_2_, CP4BA_INST_DB_3_, etc...) 
# DB 1
# name of DB server CR
export CP4BA_INST_DB_1_CR_NAME="my-postgres-1-for-cp4ba"
# template file for SQL statements
export CP4BA_INST_DB_1_TEMPLATE="../templates/db-statements-ref-content.sql"
# DB service name 
export CP4BA_INST_DB_1_SERVICE="${CP4BA_INST_DB_1_CR_NAME}-rw"
# DB full server name
export CP4BA_INST_DB_1_SERVER_NAME="${CP4BA_INST_DB_1_SERVICE}.${CP4BA_INST_DB_NAMESPACE}.svc.cluster.local"

# DB 2
# name of DB server CR
export CP4BA_INST_DB_2_CR_NAME="my-postgres-2-for-cp4ba"
# template file for SQL statements
export CP4BA_INST_DB_2_TEMPLATE="../templates/db-statements-ref-content.sql"
# DB service name 
export CP4BA_INST_DB_2_SERVICE="${CP4BA_INST_DB_2_CR_NAME}-rw"
# DB full server name
export CP4BA_INST_DB_2_SERVER_NAME="${CP4BA_INST_DB_2_SERVICE}.${CP4BA_INST_DB_NAMESPACE}.svc.cluster.local"

#----------------------------------------------------------------------
# DB credential section, add your own if more db needed
#----------------------------------------------------------------------

# DB, usernames and passwords (do not modify for education/demo/test)
# WARNING (Restriction: You cannot use the same database user for IBM Business Automation Workflow and Workstream Services, or for other components, such as Business Automation Studio. You can use a shared database but you must use a different database user for each component.)

export CP4BA_INST_DB_ICN_USER="icn"
export CP4BA_INST_DB_ICN_PWD="dem0s"
export CP4BA_INST_DB_ICN_LBL=""

export CP4BA_INST_DB_GCD_USER="gcd"
export CP4BA_INST_DB_GCD_PWD="dem0s"
export CP4BA_INST_DB_GCD_LBL="gcd"

export CP4BA_INST_DB_OS_USER="os"
export CP4BA_INST_DB_OS_PWD="dem0s"
export CP4BA_INST_DB_OS_LBL="os"

export CP4BA_INST_DB_AE_USER="ae"
export CP4BA_INST_DB_AE_PWD="dem0s"
export CP4BA_INST_DB_AE_LBL="ae"


#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Pak Capabilities
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#-----------------------------------------
# DB storage, optional (do not modify for education/demo/test)

export CP4BA_INST_DB_TOS_SCHEMA_DATA="vwdata_ts"
export CP4BA_INST_DB_TOS_SCHEMA_INDEX="vwindex_ts"
export CP4BA_INST_DB_TOS_SCHEMA_BLOB="vwblob_ts"
export CP4BA_INST_DB_TOS_REGION_NAME="TOSRegion1"
export CP4BA_INST_DB_TOS_DT_MASK="mm/dd/yy hh:tt am"

#----------------------------------------------------------------------
# add capability from here...
#----------------------------------------------------------------------

#----------------------------------------------------------------------
# Content
#----------------------------------------------------------------------

#-----------------------------------
# OS1

# DB 1
export CP4BA_INST_CONTENT_1=true
export CP4BA_INST_CONTENT_1_DB_NAME="content1"
export CP4BA_INST_CONTENT_1_DB_HOST="${CP4BA_INST_DB_1_SERVER_NAME}" # warning: CP4BA_INST_DB_<num>
export CP4BA_INST_CONTENT_1_DB_PORT="${CP4BA_INST_DB_SERVER_PORT}"
export CP4BA_INST_CONTENT_1_DB_NAME="${CP4BA_INST_ENV_FOR_DB_PREFIX}_os1"
export CP4BA_INST_CONTENT_1_DB_SECRET="${CP4BA_INST_ENV}-${CP4BA_INST_CONTENT_1_DB_NAME}-server-db-secret"

# Workflow 1
export CP4BA_INST_CONTENT_1_WF_ENABLE=true

# Storage area
export CP4BA_INST_CONTENT_OS_ASA_1_NAME="my_demo_storage"
export CP4BA_INST_CONTENT_OS_ASA_1_FS_DEV_NAME="my_demo_fs_storage"
export CP4BA_INST_CONTENT_OS_ASA_1_ROOT_DIR_NAME="my_storage_area_os1" # This value is appended to '/opt/ibm/asa/'


#-----------------------------------
# OS2

# DB 2
export CP4BA_INST_CONTENT_2=true
export CP4BA_INST_CONTENT_2_DB_NAME="content2"
export CP4BA_INST_CONTENT_2_DB_HOST="${CP4BA_INST_DB_2_SERVER_NAME}" # warning: CP4BA_INST_DB_<num>
export CP4BA_INST_CONTENT_2_DB_PORT="${CP4BA_INST_DB_SERVER_PORT}"
export CP4BA_INST_CONTENT_2_DB_NAME="${CP4BA_INST_ENV_FOR_DB_PREFIX}_os1"
export CP4BA_INST_CONTENT_2_DB_SECRET="${CP4BA_INST_ENV}-${CP4BA_INST_CONTENT_2_DB_NAME}-server-db-secret"

# Workflow 2
export CP4BA_INST_CONTENT_2_WF_ENABLE=false

# Storage area
export CP4BA_INST_CONTENT_OS_ASA_2_NAME="my_demo_storage_2"
export CP4BA_INST_CONTENT_OS_ASA_2_FS_DEV_NAME="my_demo_fs_storage_2"
export CP4BA_INST_CONTENT_OS_ASA_2_ROOT_DIR_NAME="my_storage_area_os2" # This value is appended to '/opt/ibm/asa/'


#-----------------------------------
# Optional_components
export CP4BA_INST_CONTENT_OPTCOMPS_BAI=false
export CP4BA_INST_CONTENT_OPTCOMPS_CMIS=true
export CP4BA_INST_CONTENT_OPTCOMPS_CSS=true
export CP4BA_INST_CONTENT_OPTCOMPS_ICCSAP=false
export CP4BA_INST_CONTENT_OPTCOMPS_IER=false
export CP4BA_INST_CONTENT_OPTCOMPS_TM=false

#-----------------------------------
# Graphql
export CP4BA_INST_CONTENT_GRAPHQL=true
export CP4BA_INST_CONTENT_GRAPHQL_REPLICAS=1
export CP4BA_INST_CONTENT_GRAPHQL_LIMITS_CPU="1000m"
export CP4BA_INST_CONTENT_GRAPHQL_LIMITS_MEMORY="1536Mi"
export CP4BA_INST_CONTENT_GRAPHQL_LIMITS_EPHEMSTORAGE="1Gi"


